@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;

  font-family: 'Roboto slab', Arial, Helvetica, sans-serif;

  --dark-color: #24292F;
  --light-color: #EDEADE;

  --stroke-width: 1rem;
  --half-stroke: calc(var(--stroke-width) / 2);
}

body {
  display: flex;
  flex-direction: column;

  min-height: 100vh;
  background-color: var(--light-color);
}

body > header,
body > main {
  margin: 0 auto;
  width:  min(100vw, 400px)
}

main {
  display: flex;
  flex-direction: column;
}

h1 {
  text-decoration: underline;
  color: var(--dark-color);
}

button {
  cursor: pointer;
}

footer {
  display: grid;
  justify-content: center;
  
  width: 100vw;
  margin-top: auto;

  padding: 1rem;
  background-color: var(--dark-color);
}

footer a {
  color: var(--light-color);
  text-decoration: none;
}

.menu {
  height: fit-content;
}

.menu button {
  color: var(--dark-color);
  background-color: transparent;
  font-size: 1.5rem;
  padding: 0 1rem;
  border: none;
}

.menu button:hover {
  opacity: 0.8;
}

.config {
  display: flex;
  justify-content: space-between;
}

.config {
  transform: scaleY(0);
  transition: all 200ms ease;
}

.config.show {
  transform: scaleY(1);
}

#gameboard {
  margin: 0 auto;

  background-color: var(--light-color);
  --side-length: clamp(100px, 8vw, 120px);

  width: fit-content;
  display: grid;
  grid-template-columns: repeat(3, var(--side-length));
  grid-template-rows: repeat(3, var(--side-length));
  
  font-size: calc(var(--side-length) * 30 / 100);
}

.stroke {
  position: absolute;
  background-color: var(--dark-color);

  top: 50%;
  left: 50%;

  translate: -50% -50%;
  width: clamp(360px, 30vw, 700px);
  height: var(--half-stroke);

  animation: scratch 1s forwards;
}

@keyframes scratch {
  from {
    scale: 0;
  }

  to {
    scale: 1
  }
}

#gameboard > button {
  position: relative;
  
  background-color: transparent;
  color: var(--dark-color);
  
  font-weight: bold;
  font-size: inherit;

  border-color: var(--dark-color);
  border-style: solid;
  border-width: 0;
}

#gameboard > button:not(:nth-child(3n)) {
  border-right-width: var(--half-stroke);
}

#gameboard > button:not(:nth-child(3n + 1)) {
  border-left-width: var(--half-stroke);
}

#gameboard > button:not(:nth-child(n + 7)) {
  border-bottom-width: var(--half-stroke);
}

#gameboard > button:nth-child(n + 4) {
  border-top-width: var(--half-stroke);
}

[data-animation="grow"] {
  animation: grow 200ms forwards;
}

@keyframes grow {
  from {
    font-size: 0;
  }
  
  to {
    font-size: inherit;
  }
}

#scoreboard {
  display: flex;
  align-items: center;
  
  min-width: 100%;
  height: 4rem;
  margin: 1rem 0;

  border: 4px solid var(--dark-color);
  border-radius: 4px;
}

#scoreboard > div {
  flex: 1; 
  height: 100%;
  padding: 1rem;

  display: grid;
  align-items: center;
  transition: all 300ms ease-in-out;

  text-align: center;
}

#scoreboard [data-playing="true"] {
  flex: 10;
  font-weight: bold;
  font-size: 1.5rem;

  background-color: var(--dark-color);
  color: var(--light-color);
}

#scoreboard .loser {
  display: none;
}

#scoreboard .winner {
  color: yellow;
}

#scoreboard .tie {
  flex: 1;
  color: blue;
}

